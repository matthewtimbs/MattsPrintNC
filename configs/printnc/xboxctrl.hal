# LinuxCNC HAL file for XBox One controller to jog and zero axis
loadusr -W hal_input -KRAL Microsoft X-Box One S pad
loadrt mult2 count=2 
addf mult2.0 servo-thread
addf mult2.1 servo-thread

# Joystick output is a float in the range [-1..1]
# Ignore initial small values as joystick centre is not exactly zero
setp halui.axis.jog-deadband 0.3

# Set axis jog speed
setp halui.axis.jog-speed 2000

# Map left joystick to X, Y axis
net jog-x-analog halui.axis.x.analog <= input.0.abs-x-position
# MJT flipping Y.  Using Mult2.1 not .0  each in0, in1 are params. out is the answer of multiply. I think.
setp mult2.1.in0 -1
net y-jog-input mult2.1.in1 <= input.0.abs-y-position
net jog-y-analog halui.axis.y.analog <= mult2.1.out

# Map right joystick Up/Down to Z axis. Need to change sign of input so Z axis moves in correct direction
setp mult2.0.in0 -1
net z-jog-input mult2.0.in1 <= input.0.abs-ry-position
net jog-z-analog halui.axis.z.analog <= mult2.0.out

# Map X, Y, A buttons to zero X, Y, Z offset (G10 L20 P1 X0/Y0/Z0 defined in [HALUI] section of ini file)
net zero-x halui.mdi-command-00 <= input.0.btn-x
net zero-y halui.mdi-command-01 <= input.0.btn-y
net zero-z halui.mdi-command-02 <= input.0.btn-a
